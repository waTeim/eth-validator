ame: Package & Publish Helm Charts on develop→master merge

on:
  pull_request_target:
    types: [closed]
    branches: [ master ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: publish-helm
  cancel-in-progress: false

env:
  HELM_REPO_OWNER: waTeim
  HELM_REPO_NAME: helm-charts
  HELM_BASE_URL: https://wateim.github.io/helm-charts
  PUBLISH_BRANCH: gh-pages
  CHART_DIRS: "siren eth-validator"

jobs:
  publish:
    if: >
      (github.event_name == 'pull_request_target' &&
       github.event.pull_request.merged == true &&
       github.event.pull_request.base.ref == 'master' &&
       github.event.pull_request.head.ref == 'develop')
      || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Check out source at merge commit (or master on manual run)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || 'master' }}

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Fetch current index.yaml from Pages (if any)
        run: |
          set -euo pipefail
          mkdir -p /tmp/index
          if curl -fsSL "${HELM_BASE_URL}/index.yaml" -o /tmp/index/index.yaml; then
            echo "Fetched existing index.yaml"
          else
            echo "No existing index.yaml found; starting fresh."
            : > /tmp/index/index.yaml
          fi

      - name: Decide what to package (version-gated)
        id: decide
        run: |
          set -euo pipefail
          mkdir -p dist
          : > /tmp/to_publish.list

          for chart in ${CHART_DIRS}; do
            if [[ ! -f "${chart}/Chart.yaml" ]]; then
              echo "Skip ${chart}: no Chart.yaml"
              continue
            fi

            NAME=$(awk '/^name:/{print $2; exit}' "${chart}/Chart.yaml")
            VERSION=$(awk '/^version:/{print $2; exit}' "${chart}/Chart.yaml")

            if [[ -z "${NAME}" || -z "${VERSION}" ]]; then
              echo "ERROR: Could not determine name/version for ${chart}"
              exit 1
            fi

            echo "Chart ${NAME} version ${VERSION}"

            if grep -qE "$NAME-$VERSION\.tgz" /tmp/index/index.yaml; then
              echo "⏭️  ${NAME} ${VERSION} already in index; skipping."
              continue
            fi

            echo "✅ ${NAME} ${VERSION} not found in index; will package."
            echo "${chart}" >> /tmp/to_publish.list
          done

          COUNT=$(wc -l </tmp/to_publish.list | tr -d ' ')
          echo "count=${COUNT}" >> $GITHUB_OUTPUT

      - name: Exit early if nothing to publish
        if: steps.decide.outputs.count == '0'
        run: echo "Nothing to publish; exiting."

      - name: Package selected charts
        if: steps.decide.outputs.count != '0'
        run: |
          set -euo pipefail
          while read -r chart; do
            [[ -z "${chart}" ]] && continue
            echo "Packaging ${chart}"
            helm dependency update "${chart}" || true
            helm package "${chart}" -d dist/
          done </tmp/to_publish.list
          ls -l dist || true

      - name: Clone Helm repo (gh-pages)
        if: steps.decide.outputs.count != '0'
        env:
          TOKEN: ${{ secrets.HELM_REPO_TOKEN }}
        run: |
          set -euo pipefail
          git clone --depth 1 "https://x-access-token:${TOKEN}@github.com/${HELM_REPO_OWNER}/${HELM_REPO_NAME}.git" publish
          cd publish
          if git rev-parse --verify "${PUBLISH_BRANCH}" >/dev/null 2>&1; then
            git checkout "${PUBLISH_BRANCH}"
          else
            git checkout --orphan "${PUBLISH_BRANCH}"
            # Clean working tree without deleting .git
            git rm -rf . >/dev/null 2>&1 || true
            find . -mindepth 1 -maxdepth 1 ! -name ".git" -exec rm -rf {} +
          fi

      - name: Copy packages and rebuild index
        if: steps.decide.outputs.count != '0'
        run: |
          set -euo pipefail
          cp -v dist/*.tgz publish/ || true
          if [[ -f "publish/index.yaml" ]]; then
            helm repo index publish --url "${HELM_BASE_URL}" --merge publish/index.yaml
          else
            helm repo index publish --url "${HELM_BASE_URL}"
          fi

      - name: Configure git identity
        if: steps.decide.outputs.count != '0'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@users.noreply.github.com"

      - name: Commit & push to gh-pages
        if: steps.decide.outputs.count != '0'
        env:
          TOKEN: ${{ secrets.HELM_REPO_TOKEN }}
        run: |
          set -euo pipefail
          cd publish
          git add -A
          if git diff --cached --quiet; then
            echo "No gh-pages changes."
            exit 0
          fi
          git commit -m "Publish charts from ${GITHUB_REPOSITORY}@${GITHUB_SHA}"
          git push origin HEAD:"${PUBLISH_BRANCH}"
