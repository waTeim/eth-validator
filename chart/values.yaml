# Default values for eth-validator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

affinity: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

externalIp: ""
fullnameOverride: ""

geth:
  affinity: {}

  cache: 4096

  external:
    annotations: {}
    type: LoadBalancer
    p2p:
      port: 30303

  image:
    repository: ethereum/client-go
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []

  internal:
    annotations: {}
    type: ClusterIP
    api:
      port: 8545
    auth:
      port: 8551
    metrics:
      port: 6060

  maxPeers: 0

  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  replicaCount: 1

  resources:
    limits:
      cpu: 3
      memory: 10G
    requests:
      cpu: 3
      memory: 10G
    
  securityContext: {}

  storage:
    class: "default"
    size: "600G"
  
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

lighthouseBeacon:
  affinity: {}

  checkpointSyncUrl: ""

  external:
    annotations: {}
    type: LoadBalancer
    p2p:
      port: 31400

  image:
    repository: sigp/lighthouse
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []

  internal:
    annotations: {}
    type: ClusterIP
    api:
      port: 5052
    metrics:
      port: 5054

  mev:
    enabled: true
    port: 18550
    relay: null
    image:
      repository: flashbots/mev-boost
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"

    imagePullSecrets: []
    securityContext: {}

  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}

  replicaCount: 1

  resources:
    limits:
      cpu: 4
      memory: 16G
    requests:
      cpu: 4
      memory: 16G
    
  securityContext: {}

  storage:
    class: "default"
    size: "250G"
  
  targetPeers: 0


lighthouseValidator:
  affinity: {}

  image:
    pullPolicy: IfNotPresent
    repository: wateim/lighthouse-launch
    tag: "latest"

  imagePullSecrets: []

  internal:
    annotations: {}
    type: ClusterIP
    launch:
      port: 5000
    metrics:
      port: 5054

  loglevel: ""
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  replicaCount: 1

  resources:
    limits:
      cpu: 1
      memory: 2G
    requests:
      cpu: 1
      memory: 2G

  secretsDir:
    useFlag: false
    mountPath: "/secrets"

  securityContext: {}
    
  storage:
    class: "default"
    size: "2G"

nameOverride: ""
network: "hoodi"
nodeSelector: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

tolerations: []